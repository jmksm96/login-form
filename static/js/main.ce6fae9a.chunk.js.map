{"version":3,"sources":["redux/profile-reducer/profile.selectors.ts","api/api.ts","redux/profile-reducer/profile-reducer.ts","redux/auth-reducer/auth-reducer.ts","components/profile/Profile.tsx","redux/auth-reducer/auth-selector.ts","components/helpers/PublicRoute.tsx","components/helpers/PrivateRoute.tsx","components/login/Login.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/login/login.module.scss","components/profile/Profile.module.scss"],"names":["getProfile","state","profile","instance","axios","create","baseURL","headers","Accept","$commonInstance","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","access_token","data","accessToken","error","Promise","reject","api","logIn","email","password","post","stringify","clientId","logOut","getUserProfile","get","initialState","loading","user","getProfileSuccess","type","payload","profileReducer","action","isSubmitting","currentUser","logInSuccess","logOutFailure","authReducer","Profile","dispatch","useDispatch","useSelector","shallowEqual","useEffect","a","className","style","container","message","Typography","variant","component","gutterBottom","code","CircularProgress","pre","Button","color","onClick","response","removeItem","getAuth","auth","PublicRoute","children","rest","render","location","to","pathname","from","PrivateRoute","Login","formik","useFormik","validate","values","errors","test","initialValues","onSubmit","setItem","handleSubmit","FormControl","FormGroup","TextField","label","margin","getFieldProps","LinearProgress","disabled","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ce6fae9a.chunk.js","sourcesContent":["import {AppStateType} from '../store';\r\n\r\n\r\nexport const getProfile = (state: AppStateType) => state.profile","import axios from 'axios'\r\nimport {TokenT} from '../redux/auth-reducer/auth-reducer'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://tager.dev.ozitag.com/api',\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\n\r\nconst $commonInstance = axios.create({\r\n    baseURL: 'https://tager.dev.ozitag.com/api',\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }\r\n})\r\n\r\ninstance.interceptors.request.use(\r\n    (config) => {\r\n        const token: TokenT = JSON.parse(localStorage.getItem('token') || '{}');\r\n        const access_token: string = token.data.data.accessToken;\r\n\r\n        if (token) {\r\n            config.headers['Authorization'] = `Bearer ${access_token}`;\r\n        }\r\n        return config;\r\n    },\r\n    (error) => {\r\n        return Promise.reject(error);\r\n    },\r\n);\r\n\r\nconst api = {\r\n    logIn: (email: string, password: string) => {\r\n        return $commonInstance.post('/auth/user',\r\n            JSON.stringify({email, password, clientId: 1})\r\n        )\r\n    },\r\n    logOut: () => {\r\n        return instance.post('/tager/user/profile/logout')\r\n    },\r\n    getUserProfile: () => {\r\n        return instance.get('/tager/user/profile')\r\n    }\r\n}\r\n\r\nexport default api\r\n","import api from '../../api/api'\r\nimport {User} from '../auth-reducer/auth-reducer'\r\nimport {Dispatch} from 'redux';\r\n\r\n\r\nconst initialState: ProfileStateT = {\r\n    loading: false,\r\n    user: null,\r\n    error: null,\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ProfileActionTypes) => {\r\n    switch (action.type) {\r\n        case 'GET-PROFILE': {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: null,\r\n                error: null,\r\n            }\r\n        }\r\n        case 'GET-PROFILE-SUCCESS': {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload\r\n            }\r\n        }\r\n\r\n        case 'GET-PROFILE-FAILURE': {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//types\r\ntype ProfileActionTypes = ReturnType<typeof getProfile>\r\n    | ReturnType<typeof getProfileSuccess>\r\n    | ReturnType<typeof getProfileFailure>\r\n\r\ntype ProfileStateT = {\r\n    loading: boolean,\r\n    user: User | null,\r\n    error: Error | null,\r\n}\r\n\r\n//actions\r\n\r\nexport const getProfile = () => {\r\n    return {\r\n        type: 'GET-PROFILE'\r\n    } as const\r\n}\r\n\r\nexport const getProfileSuccess = (user: User | null) => {\r\n    return {\r\n        type: 'GET-PROFILE-SUCCESS',\r\n        payload: user\r\n    } as const\r\n}\r\nexport const getProfileFailure = (error: Error | null) => {\r\n    return {\r\n        type: 'GET-PROFILE-FAILURE',\r\n        payload: error,\r\n    } as const\r\n}\r\n\r\n//thunks\r\n\r\nexport const getProfileTC = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            const user = await api.getUserProfile()\r\n            dispatch(getProfileSuccess(user.data))\r\n        } catch (error) {\r\n            dispatch(getProfileFailure(error))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer","import { Dispatch } from 'redux'\r\nimport api from '../../api/api'\r\n\r\n\r\nconst initialState: AuthStateT = {\r\n    isSubmitting: false,\r\n    currentUser: null,\r\n    error: null,\r\n}\r\nconst authReducer = (state: AuthStateT = initialState, action: AuthActionTypes) => {\r\n    switch (action.type) {\r\n        case 'LOGIN': {\r\n            return {\r\n                ...state,\r\n                isSubmitting: true,\r\n                error: null\r\n            }\r\n        }\r\n        case 'LOGIN-SUCCESS': {\r\n            return {\r\n                ...state,\r\n                isSubmitting: false,\r\n                currentUser: action.payload\r\n            }\r\n        }\r\n        case 'LOGIN-FAILURE': {\r\n            return {\r\n                ...state,\r\n                isSubmitting: false,\r\n                error: action.payload\r\n            }\r\n        }\r\n        case 'LOGOUT-SUCCESS': {\r\n            return initialState\r\n        }\r\n        case 'LOGOUT-FAILURE': {\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//types\r\ntype AuthActionTypes = ReturnType<typeof logInSuccess>\r\n    | ReturnType<typeof logInFailure>\r\n    | ReturnType<typeof logOut>\r\n    | ReturnType<typeof logIn>\r\n    | ReturnType<typeof logOutSuccess>\r\n    | ReturnType<typeof logOutFailure>\r\n\r\nexport type TokenT = {\r\n    data:\r\n        {\r\n            data:\r\n                {\r\n                    tokenType: string;\r\n                    expiresAt: string;\r\n                    accessToken: string;\r\n                    refreshToken: string;\r\n                    scopes: [];\r\n                }\r\n        }\r\n}\r\ntype AuthStateT = {\r\n    isSubmitting: boolean;\r\n    currentUser: object | null;\r\n    error: Error | null;\r\n}\r\nexport type User = {\r\n    name: string;\r\n    email: string;\r\n}\r\n\r\n//actions\r\nexport type Credentials = {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\nexport const logIn = (credentials: Credentials) => {\r\n    return {\r\n        type: 'LOGIN',\r\n        payload: credentials,\r\n    } as const;\r\n}\r\n\r\nexport const logInSuccess = (user: TokenT) => {\r\n    return {\r\n        type: 'LOGIN-SUCCESS',\r\n        payload: user\r\n    } as const\r\n}\r\nexport const logInFailure = (error: any) => {\r\n    return {\r\n        type: 'LOGIN-FAILURE',\r\n        payload: error\r\n    } as const\r\n}\r\nexport const logOut = () => {\r\n    return {\r\n        type: 'LOGOUT'\r\n    } as const\r\n}\r\nexport const logOutSuccess = (data: { success: boolean }) => {\r\n    return {\r\n        type: 'LOGOUT-SUCCESS',\r\n        payload: data,\r\n    } as const\r\n}\r\nexport const logOutFailure = (error: Error | null) => {\r\n    return {\r\n        type: 'LOGOUT-FAILURE',\r\n        payload: error\r\n    } as const\r\n}\r\n\r\n//thunks\r\nexport const logInTC = (email: string, password: string) => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            const user = await api.logIn(email, password)\r\n            dispatch(logInSuccess(user))\r\n            localStorage.setItem('token', JSON.stringify(user));\r\n        } catch (error) {\r\n            dispatch(logOutFailure(error))\r\n            localStorage.removeItem('token');\r\n        }\r\n    }\r\n}\r\n\r\nexport const logOutTC = () => {\r\n    return async (dispatch: Dispatch) => {\r\n        try {\r\n            const response = await api.logOut()\r\n            dispatch(logOutSuccess(response.data))\r\n            localStorage.removeItem('token');\r\n        } catch (error) {\r\n            dispatch(logOutFailure(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer\r\n","import React, {useEffect} from 'react';\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {getProfile} from '../../redux/profile-reducer/profile.selectors';\r\nimport {getProfileTC} from '../../redux/profile-reducer/profile-reducer';\r\nimport {logOutTC} from '../../redux/auth-reducer/auth-reducer';\r\nimport {Button} from '@material-ui/core';\r\nimport style from './Profile.module.scss'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const {loading, user, error} = useSelector(getProfile, shallowEqual);\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfileTC());\r\n    }, [dispatch]);\r\n\r\n    const handleLogOut = () => {\r\n        dispatch(logOutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            {error && <p className=\"error\">{error.message}</p>}\r\n\r\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n                User profile:\r\n            </Typography>\r\n            <div className={style.code}>\r\n                {loading && <CircularProgress/>}\r\n                {user && <pre className={style.pre}>{JSON.stringify(user, null, 2)}</pre>}\r\n            </div>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={handleLogOut}>\r\n                Log out\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {AppStateType} from '../store';\r\n\r\n\r\nexport const getAuth = (state: AppStateType) => state.auth;","import React from 'react';\r\nimport {shallowEqual, useSelector} from 'react-redux';\r\nimport {getAuth} from '../../redux/auth-reducer/auth-selector';\r\nimport {Redirect, Route, RouteProps} from 'react-router-dom';\r\n\r\nconst PublicRoute: React.FC<RouteProps> = ({children, ...rest}) => {\r\n    const {currentUser} = useSelector(getAuth, shallowEqual);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                currentUser ? (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/profile',\r\n                            state: { from: location },\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    children\r\n                )\r\n            }\r\n        />\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","import React from 'react';\r\nimport {Redirect, Route, RouteProps} from 'react-router-dom';\r\nimport {shallowEqual, useSelector} from 'react-redux';\r\nimport {getAuth} from '../../redux/auth-reducer/auth-selector';\r\n\r\nconst PrivateRoute:React.FC<RouteProps>= ({ children, ...rest }) => {\r\n    const { currentUser } = useSelector(getAuth, shallowEqual);\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                currentUser ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: { from: location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import {Button, FormControl, FormGroup, LinearProgress, TextField} from '@material-ui/core';\r\nimport {useFormik} from 'formik';\r\nimport React from 'react';\r\nimport style from './login.module.scss'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {shallowEqual, useDispatch, useSelector} from 'react-redux';\r\nimport {Credentials, logInTC} from '../../redux/auth-reducer/auth-reducer';\r\nimport {getAuth} from '../../redux/auth-reducer/auth-selector';\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {isSubmitting, error} = useSelector(getAuth, shallowEqual);\r\n    const formik = useFormik({\r\n\r\n        validate: (values) => {\r\n            const errors: Partial<Credentials> = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required email';\r\n            } else if (\r\n                !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n            ) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            if (!values.password) {\r\n                errors.password = 'Required password'\r\n            }\r\n            return errors;\r\n        },\r\n        initialValues: {\r\n            email: 'user@ozitag.com',\r\n            password: 'user',\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(logInTC(values.email, values.password))\r\n        },\r\n    })\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            {error && <p className={style.error}>{error.message}</p>}\r\n            <Typography variant=\"h3\" component=\"h2\" gutterBottom>\r\n                Log in\r\n            </Typography>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <FormControl>\r\n                    <FormGroup>\r\n                        <TextField\r\n                            type=\"email\"\r\n                            label=\"Email\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                        {formik.errors.email ? <div className={style.error}>{formik.errors.email}</div> : null}\r\n                        <TextField\r\n                            type=\"password\"\r\n                            label=\"Password\"\r\n                            margin=\"normal\"\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                        {formik.errors.password ? <div className={style.error}>{formik.errors.password}</div> : null}\r\n                        {isSubmitting && <LinearProgress/>}\r\n                    </FormGroup>\r\n                    <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}>\r\n                        Submit\r\n                    </Button>\r\n\r\n                </FormControl>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport './App.css';\r\nimport Profile from './components/profile/Profile';\r\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\r\nimport PublicRoute from './components/helpers/PublicRoute';\r\nimport PrivateRoute from './components/helpers/PrivateRoute';\r\nimport Login from './components/login/Login';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path={['/login-form', '/']} exact>\r\n                    <Redirect to=\"/login/\"/>\r\n                </Route>\r\n                <div className=\"App\">\r\n                    <PublicRoute path=\"/login\">\r\n                        <Login/>\r\n                    </PublicRoute>\r\n                    <PrivateRoute path=\"/profile\">\r\n                        <Profile/>\r\n                    </PrivateRoute>\r\n                </div>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport authReducer from \"./auth-reducer/auth-reducer\";\r\nimport profileReducer from \"./profile-reducer/profile-reducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__23Tpl\",\"form\":\"login_form__29o9p\",\"error\":\"login_error__28RHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Profile_container__3iCys\",\"code\":\"Profile_code__3DSP9\",\"pre\":\"Profile_pre__hdZUx\"};"],"sourceRoot":""}